name: Analyze Code and Generate Report

on:
  push:
    branches:
      - main

jobs:
  analyze-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies
        run: dotnet restore Calc/Calc.csproj

      - name: Build and Run Roslyn Analysis
        run: |
          dotnet build --configuration Release CodeAnalyzer/CodeAnalyzer.csproj

          if [ "${{ runner.os }}" == "Windows" ]; then
            dotnet run --project CodeAnalyzer/CodeAnalyzer.csproj >> analysis_report.txt
          fi

      - uses: actions/labeler@v2
        with:
          repo-token: "${{ secrets.ACTIONSTOKEN }}"

      - name: Run Static Analysis on Calc Project
        run: |
          dotnet build --configuration Release Calc/Calc.csproj
          # 이 부분에서 Calc 프로젝트에 대한 Roslyn 정적 분석을 수행하십시오.

      - name: Commit and Push Report
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add -f analysis_report.txt
          git commit -m "Add analysis report"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
